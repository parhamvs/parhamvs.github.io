---
---

@article{valipoorsalimi2023mechanical,
  abbr={preprint},
  bibtex_show={true},
  preview={prd_2023.png},
  title={Mechanical Property Design of Bio-compatible Mg alloys using Machine-Learning Algorithms},
  author={Valipoorsalimi, Parham and Sari, Yuksel Asli and Pekguleryuz, Mihriban},
  journal={Materials & design},
  year={2023},
  pdf={https://arxiv.org/pdf/2305.12060.pdf},
  abstract={Magnesium alloys are attractive options for temporary bio-implants because of their bio compatibility, controlled corrosion rate, and similarity to natural bone in terms of stiffness and density. Nevertheless, their low mechanical strength hinders their use as cardiovascular stents and bone substitutes. While it is possible to engineer alloys with the desired mechanical strength, optimizing the mechanical properties of biocompatible magnesium alloys using conventional experimental methods is time-consuming and expensive. Therefore, Artificial Intelligence (AI) can be leveraged to streamline the alloy design process and reduce the required time. In this study, a machine learning model was developed to predict the yield strength (YS) of biocompatible magnesium alloys with an R2 accuracy of 91%. The predictive model was then validated using the CALPHAD technique and thermodynamics calculations. Next, the predictive model was employed as the fitness function of a genetic algorithm to optimize the alloy composition for high-strength biocompatible magnesium implants. As a result, two alloys were proposed and synthesized, exhibiting YS values of 108 and 113 MPa, respectively. These values were substantially higher than those of conventional magnesium biocompatible alloys and closer to the YS and compressive strength of natural bone. Finally, the synthesized alloys were subjected to microstructure analysis and mechanical property testing to validate and evaluate the performance of the proposed AI-based alloy design approach for creating alloys with specific properties suitable for diverse applications.},
  code={https://github.com/parhamvs/Alloy-Properties-FactSage-Calculations},
}

@inproceedings{asadi2023towards,
  abbr={preprint},
  bibtex_show={true},
  preview={prd_2023.png},
  title={Prototype-Sample Relation Distillation: Towards Replay-Free Continual Learning},
  author={Asadi, Nader and Davari, MohammadReza and Mudur, Sudhir and Aljundi, Rahaf and Belilovsky, Eugene},
  booktitle={ICML},
  year={2023},
  selected={true},
  arxiv={2303.14771},
  pdf={https://arxiv.org/pdf/2303.14771.pdf},
  abstract={In Continual learning (CL) balancing effective adaptation while combating catastrophic forgetting is a central challenge. Many of the recent best-performing methods utilize various forms of prior task data, e.g. a replay buffer, to tackle the catastrophic forgetting problem. Having access to previous task data can be restrictive in many real-world scenarios, for example when task data is sensitive or proprietary. To overcome the necessity of using previous tasks data, in this work, we start with strong representation learning methods that have been shown to be less prone to forgetting. We propose a holistic approach to jointly learn the representation and class prototypes while maintaining the relevance of old class prototypes and their embedded similarities. Specifically, samples are mapped to an embedding space where the representations are learned using a supervised contrastive loss. Class prototypes are evolved continually in the same latent space, enabling learning and prediction at any point. To continually adapt the prototypes without keeping any prior task data, we propose a novel distillation loss that constrains class prototypes to maintain relative similarities as compared to new task data. This method yields state-of-the-art performance in the task-incremental setting where we are able to outperform other methods that both use no data as well as approaches relying on large amounts of data. Our method is also shown to provide strong performance in the class-incremental setting without using any stored data points.},
  code={https://github.com/naderAsadi/CLHive},
}
